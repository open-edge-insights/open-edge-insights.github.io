
EII Etcd Secrets Configuration
==============================

Etcd Secrets configuration are done to establish the data path
of various EII containers.

The below are the ENV's that should be present in the environment section
of every service in ``build/docker-compose.yml``\ :

.. code-block::

     [service_name]:
       ...
       environment:
           AppName: "app_name" # required if a unique first level key `/[AppName]` is needed in etcd
       secrets:  # This section needs to be commented out when run in DEV mode. Only needed for PROD mode
           - etcd_ca_certificate
           - app_public_certificate_for_etcd
           - app_private_key_for_etcd

Etcd secrets(certs) for all the services of docker compose file will be generated automatically during provisioning.
Post provisioning this secrets should be mentioned in following two places for each service.

1) in the ``secrets`` section at the bottom of ``build/docker-compose.yml``\ :

.. code-block::

   ```
   secrets:
     etcd_ca_certificate:
       file: [path_to_pem_file]
     app_public_certificate_for_etcd:
       file: [path_to_pem_file]
     app_private_key_for_etcd:
       file: [path_to_pem_file]
   ```

2) In the ``secrets`` section in for each service.

.. note:: \ : The secret name must follow proper naming convention and file path as below
      ```


.. code-block::

   etcd_<AppName>_cert:
     file: provision/Certificates/<AppName>/<AppName>_client_certificate.pem
   etcd_<AppName>_key:
     file: provision/Certificates/<AppName>/<AppName>_client_key.pem


.. code-block::

     For example, if the AppName is `VideoIngestion1`, secrets must be mentioned as below

  etcd_VideoIngestion1_cert:
    file: provision/Certificates/VideoIngestion1/VideoIngestion1_client_certificate.pem
  etcd_VideoIngestion1_key:
    file: provision/Certificates/VideoIngestion1/VideoIngestion1_client_key.pem

  ```

----

  **NOTE**\ :


* 
  ``Telegraf`` service must use ``InfluxDBConnector`` secrets as it needs access to InfluxDBConnector certs and configs. To enable this please mention InfluxDBConnector AppName as ``InfluxDBAppName`` in environment section of Telegraf app. Also use secrets of InfluxDBConnector app for Telegraf Service. A seperate certificates for Telegraf app is also generated during provisioning and can be used if needed for storing Telegraf service related configurations.

* 
  ``socket_dir_name`` where unix socket files are created. If ``<protocol>`` is
  ``zmq/tcp``\ , then ``<endpoint>`` has to be the combination of ``<hostname>:<port>``.

----
