
Sample UDFs Directory
---------------------

In the ``CustomUdfs`` directory, there are 5 sample UDfs implemented and shown as follows. These samples are created to showcase different use case.

.. code-block:: bash

   .
   ├── NativeSafetyGearAnalytics
   ├── NativeSafetyGearIngestion

   ├── PyMultiClassificationIngestion

   ├── PySafetyGearAnalytics
   ├── PySafetyGearIngestion

   ├── GVASafetyGearIngestion
   ├── NativeOneAPIIngestion

   └── README.md

The `docker-compose.yml <https://github.com/open-edge-insights/video-custom-udfs/blob/master/NativeSafetyGearAnalytics/docker-compose.yml>`_ container has used the `docker-compose.yml <https://github.com/open-edge-insights/video-custom-udfs/blob/master/NativeSafetyGearAnalytics/docker-compose.yml>`_ UDF which is defined in the Video Ingestion container. You can define its own preprocessing UDF and add to the ``config.json`` file to modify it. The results are posted to a eii-msgbus topic which is subscribed by the `docker-compose.yml <https://github.com/open-edge-insights/video-custom-udfs/blob/master/NativeSafetyGearAnalytics/docker-compose.yml>`_ containers. The configs can be seen in the `docker-compose.yml <https://github.com/open-edge-insights/video-custom-udfs/blob/master/NativeSafetyGearAnalytics/docker-compose.yml>`_ file. For more information on the UDF configs, refer to the following:


* `NativeSafetyGearIngestion-README <https://github.com/open-edge-insights/video-custom-udfs/blob/master/NativeSafetyGearIngestion/README.md>`_
* `NativeSafetyGearAnalytics-README <https://github.com/open-edge-insights/video-custom-udfs/blob/master/NativeSafetyGearAnalytics/README.md>`_

The `PySafetyGearAnalytics <https://github.com/open-edge-insights/video-custom-udfs/blob/master/PySafetyGearAnalytics>`_ and the `PySafetyGearAnalytics <https://github.com/open-edge-insights/video-custom-udfs/blob/master/PySafetyGearAnalytics>`_ are the same use case but they showcase the Python variant of ingestion and analytics UDF containers. For more information on the UDF configs, refer to the following:


* `PySafetyGearIngestion-README <https://github.com/open-edge-insights/video-custom-udfs/blob/master/PySafetyGearIngestion/README.md>`_
* `PySafetyGearAnalytics-README <https://github.com/open-edge-insights/video-custom-udfs/blob/master/PySafetyGearAnalytics/README.md>`_

The `PyMultiClassificationIngestion-README <https://github.com/open-edge-insights/video-custom-udfs/blob/master/PyMultiClassificationIngestion/README.md>`_ showcases a UDF where everything is performed inside the VideoIngestion containers. You will execute this UDF you don't want to involve the eii-msgbus for data transfer between containers. This allows faster processing of the pipeline. For more information on the UDF configs, refer to `PyMultiClassificationIngestion-README <https://github.com/open-edge-insights/video-custom-udfs/blob/master/PyMultiClassificationIngestion/README.md>`_.

..

   **Notes:**



* 
  It is not mandatory to have Ingestion containers for every analytics UDF. The UDFs are connected to each other via the MSGBUS topics. Hence we can always use stock VideoIngestion container as long as the Custom Analytic UDF container can read and churn the data it receives.

* 
  You shouldn't remove the VI & VA containers before first time build of custom UDF as it will fail to build custom UDFs. After the UDFs are functional, you can always remove the running VI & VA containers. While removing the VI and VA containers make necessary changes in the ``../build/docker-compose.yml`` files based on the way it is written. For example, you may need to remove **depends_on** keyword, if custom container has it for the VI and VA containers.
