
Usage of Software Trigger Utility:
----------------------------------

By default the SW Trigger Utility container will not execute anything and one needs to interact with the running container to generate the trigger commands. Make sure VI service is up and ready to process the commands from the utility.

Software trigger utility can be used in following ways:

1: "START INGESTION" -> "Allows ingestion for default time (120 seconds being default)" -> "STOP INGESTION"

.. code-block::

   ```sh
   $ cd [WORKDIR]/IEdgeInsights/build
   $ docker exec ia_sw_trigger_utility ./sw_trigger_utility
   ```


2: "START INGESTION" -> "Allows ingestion for user defined time (configurable time in seconds)" -> "STOP INGESTION"

.. code-block::

   ```sh
   $ cd [WORKDIR]/IEdgeInsights/build
   $ docker exec ia_sw_trigger_utility ./sw_trigger_utility 300
   ```
   **Note**: In the above example, VideoIngestion starts then does ingestion for 300 seconds then stops ingestion after 300 seconds & cycle repeats for number of cycles configured in the config.json.



3: Selectively send START_INGESTION software trigger:

.. code-block::

   ```sh
   $ cd [WORKDIR]/IEdgeInsights/build
   $ docker exec ia_sw_trigger_utility ./sw_trigger_utility START_INGESTION
   ```


4: Selectively send STOP_INGESTION software trigger:

.. code-block::

   ```sh
   $ cd [WORKDIR]/IEdgeInsights/build
   $ docker exec ia_sw_trigger_utility ./sw_trigger_utility STOP_INGESTION
   ```


5: Selectively send SNAPSHOT software trigger:

.. code-block::

   ```sh
   $ cd [WORKDIR]/IEdgeInsights/build
   $ docker exec ia_sw_trigger_utility ./sw_trigger_utility SNAPSHOT
   ```

.. note:: \ :  



* 
  If duplicate START_INGESTION or STOP_INGESTION sw_triggers are sent by client by mistake then the VI is capable  of catching these duplicates & responds back to client conveying that duplicate triggers were sent & requets to send proper sw_triggers. 

* 
  In order to send SNAPSHOT trigger, ensure that the ingestion is stopped. In case START_INGESTION trigger is sent previously then stop the ingestion using the STOP_INGESTION trigger.
