## Running Jupyter Notebook

1. With the above pre-requisite done, please run the below command:
    ```sh
        python3 builder.py -f usecases/video-streaming.yml
    ```

2. Refer [IEdgeInsights/README.md](../../README.md) to provision, build and run the tool along with the EII recipe/stack.

3. Run the following command to see the logs:

    ```sh
        docker logs -f ia_jupyter_notebook
    ```

4. Copy paste the URL (along with the token) from the above logs in a browser. Below is a sample URL 

    ```sh
        http://127.0.0.1:8888/?token=5839f4d1425ecf4f4d0dd5971d1d61b7019ff2700804b973
    ```
   Replace the '127.0.0.1' IP address with host IP, if you are accessing the server remotely.

5. Once the Jupyter Notebook service is launched in the browser, run the [main.ipynb](main.ipynb) file visible in the list of files available.

6. The process method of [udf_template.ipynb](udf_template.ipynb) file available in the list of files can be altered and re-run to experiment and test the UDF.

7. If any parameters are to be sent to the custom udf by the user, they can be added in the **jupyter_connector** UDF config provided to either **VideoIngestion** or **VideoAnalytics** and can be accessed in the [udf_template.ipynb](udf_template.ipynb) constructor in the **udf_config** parameter which is a dict containing all these parameters. A sample UDF for reference has been provided at [pcb_filter.py](../../common/video/udfs/python/pcb/pcb_filter.py).

**Note**: After altering/creating a new udf, run main.ipynb  and restart **VideoIngestion** or **VideoAnalytics** with which you have enabled jupyter notebook service.

8. Once the user is satisfied with the functionality of the UDF, the udf can be saved/exported by clicking on the **Download as** option and selecting **(.py)** option. The downloaded udf can then be directly used by placing it in the [../../common/video/udfs/python](../../common/video/udfs/python) directory or can be integrated and used with **CustomUDFs**.

  > **Note:**
  > * JupyterNotebook is not to be used with **CustomUDFs** like **GVASafetyGearIngestion** since they are specific to certain usecases only. Instead, the VideoIngestion pipeline can be modified to use GVA ingestor pipeline and config can be modifed to use **jupyter_connector** UDF.
