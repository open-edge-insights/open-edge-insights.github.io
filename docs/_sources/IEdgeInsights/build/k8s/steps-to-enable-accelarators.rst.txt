
Steps to enable Accelarators
----------------------------

.. note:: \ :
   ``nodeSelector`` is the simplest recommended form of node selection constraint.
   ``nodeSelector`` is a field of PodSpec. It specifies a map of key-value pairs. For the pod to be eligible to run on a node, the node must have each of the indicated key-value pairs as labels (it can have additional labels as well). The most common usage is one key-value pair.



* 
  Setting the ``label`` for a particular node

  .. code-block:: sh

     $ kubectl label nodes <node-name> <label-key>=<label-value>

* 
  For HDDL/NCS2 dependenecies follow the steps for setting ``labels``.


  * For HDDL
    .. code-block:: sh

         kubectl -n eii label nodes <node-name> hddl=true

  * For NCS2
    .. code-block:: sh

         kubectl -n eii label nodes <node-name> ncs2=true
    **Note** Here the node-name is your worker node machine hostname

* 
  Updating the ``yml`` File.


  * 
    Open the ``build/k8s/eii-k8s-deploy.yml`` file.

  * 
    Based on your
    workload preference. Add a ``nodeSelector`` field to your ``pod`` configuration for ``VideoIngestion`` or ``VideoAnalytics`` Module(s) ``k8s-service.yml`` yml file. 

    .. code-block:: sh

         $   spec:
               nodeSelector:
                 <key>: <value>


    * For HDDL
      .. code-block:: sh

           .
           .
           .
            spec:
               nodeSelector:
               hddl: "true"
               containers:
                 - name: ia-video-ingestion
                 image: ia_video_ingestion:2.4
           .
           .
           .

    * For NCS2
      .. code-block:: sh

           .
           .
           .
            spec:
               nodeSelector:
               ncs2: "true"
               containers:
                 - name: ia-video-ingestion
                 image: ia_video_ingestion:2.4
           .
           .
           .

  * 
    Run the ``build/builder.py`` for generating latest consolidated ``deploy`` yml file based on your ``nodeSelector`` changes set in the respective Modules ``k8s-service.yml`` files.

    .. code-block:: sh

         cd build/
         python3 builder.py

  * 
    Deploy the ``latest`` generated ``yml`` file

    .. code-block:: sh

         cd build/k8s/
         kubectl apply -f ./eii-k8s-deploy.yml

  * 
    Verify the respecitve workloads are running based on the ``nodeSelector`` constraints.
