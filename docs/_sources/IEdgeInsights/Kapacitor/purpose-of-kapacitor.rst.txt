
Purpose of Kapacitor
--------------------

  About Kapacitor and UDF


* 
  User can write the custom anomaly detection algorithm in PYTHON/GOLANG. And these algorithms will be called as
  UDF (user-defined function). These algorithms have to follow certain API standards so that the Kapacitor will be able to
  call these UDFs at run time.

* 
  IEdgeInsights has come up with the sample UDF written in GOLANG. Kapacitor is subscribed to the InfluxDB, and
  gets the temperature data. After getting this data, Kapacitor calls these UDF, which detects the anomaly in the temperature
  and sends back the results to Influx.

* 
  The sample Go UDF is at `go_classifier.go <https://github.com/open-edge-insights/eii-core/blob/master/udfs/go_classifier.go>`_ and
  the tick script  is at `go_point_classifier.tick <https://github.com/open-edge-insights/eii-core/blob/master/tick_scripts/go_point_classifier.tick>`_

* 
  The sample Python UDF is at `py_classifier.py <https://github.com/open-edge-insights/eii-core/blob/master/udfs/py_classifier.py>`_ and
  the tick script  is at `py_point_classifier.tick <https://github.com/open-edge-insights/eii-core/blob/master/tick_scripts/py_point_classifier.tick>`_

  For more details, on Kapacitor and UDF, please refer below links
  i)  Writing a sample UDF at `anomaly detection <https://docs.influxdata.com/kapacitor/v1.5/guides/anomaly_detection/>`_
  ii) UDF and kapacitor interaction `here <https://docs.influxdata.com/kapacitor/v1.5/guides/socket_udf/>`_

* 
  In production mode the Kapacitor config file is
  `Kapacitor/config/kapacitor.conf <https://github.com/open-edge-insights/eii-core/blob/master/config/kapacitor.conf>`_
  and in developer mode the config file would be
  `Kapacitor/config/kapacitor_devmode.conf <https://github.com/open-edge-insights/eii-core/blob/master/config/kapacitor_devmode.conf>`_
