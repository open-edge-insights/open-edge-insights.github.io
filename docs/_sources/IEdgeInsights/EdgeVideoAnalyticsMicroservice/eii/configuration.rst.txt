
Configuration
-------------

See the `edge-video-analytics-microservice/eii/config.json <https://github.com/open-edge-insights/edge-video-analytics-microservice/blob/master/eii/config.json>`_ file for the configuration of EVAM. The default configuration will start the
object_detection demo for OEI.

The config file is divided into two sections as follows:

Config section
^^^^^^^^^^^^^^

The following table describes the attributes that are supported in the ``config`` section.

.. list-table::
   :header-rows: 1

   * - Parameter
     - Description
   * - ``cert_type``
     - Type of OEI certs to be created. This should be ``"zmq"`` or ``"pem"``.
   * - ``source``
     - Source of the frames. This should be ``"gstreamer"`` or ``"msgbus"``.
   * - ``source_parameters``
     - The parameters for the source element. The provided object is the typical parameters.
   * - ``pipeline``
     - The name of the DL Streamer pipeline to use. This should correspond to a directory in the pipelines directory).
   * - ``pipeline_version``
     - The version of the pipeline to use. This typically is a subdirectory of a pipeline in the pipelines directory.
   * - ``publish_frame``
     - The Boolean flag for whether to publish the metadata and the analyzed frame, or just the metadata.
   * - ``model_parameters``
     - This provides the parameters for the model used for inference.


Interfaces section
^^^^^^^^^^^^^^^^^^

In the OEI mode, currently EVAM only supports launching a single pipeline and publishing on a single topic. This implies that in the configuration file ("config.json"),
the single JSON object in the ``Publisher`` list is where the configuration resides for the published data. For more details on the structure, refer to the `OEI documentation <https://github.com/open-edge-insights/eii-core/blob/master/README.md#add-oei-services>`_.

EVAM also supports subscribing and publishing messages or frames using the Message Bus. The endpoint details for the OEI service you need to subscribe from are to be
provided in the **Subscribers** section in the `config <https://github.com/open-edge-insights/edge-video-analytics-microservice/blob/master/eii/config.json>`_ file and the endpoints where you need to publish to are to be provided in **Publishers** section in
the `config <https://github.com/open-edge-insights/edge-video-analytics-microservice/blob/master/eii/config.json>`_ file.

To enable injection of frames into the GStreamer pipeline obtained from Message Bus, ensure to make the following changes:


* 
  The source parameter in the `config <https://github.com/open-edge-insights/edge-video-analytics-microservice/blob/master/eii/config.json>`_ file is set to msgbus

  .. code-block:: javascript

        "config": {
            "source": "msgbus"
        }

* 
  The template of respective pipeline is set to appsrc as source instead of uridecodebin

  .. code-block:: javascript

         {
             "type": "GStreamer",
             "template": ["appsrc name=source",
                          " ! rawvideoparse",
                          " ! appsink name=destination"
                         ]
         }
