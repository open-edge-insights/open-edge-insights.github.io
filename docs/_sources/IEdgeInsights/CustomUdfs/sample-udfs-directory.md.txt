# *Sample UDFs Directory*
In the CustomUdfs directory, there are 5 sample UDfs implemented and they related asshown below. These samples are created to showcase different use case.

```bash
.
├── NativeSafetyGearAnalytics
├── NativeSafetyGearIngestion

├── PyMultiClassificationIngestion

├── PySafetyGearAnalytics
├── PySafetyGearIngestion

└── README.md

```
The [*NativeSafetyGearIngestion*](./NativeSafetyGearIngestion) container has used [dummy](../common/video/udfs/native/dummy) UDF which is defined in VideoIngestion container. user can define its own preprocessing UDF and add to config.json file to modify it. The results are posted to a eii-msgbus topic which is subscribed by [NativeSafetyGearAnalytics](./NativeSafetyGearAnalytics) containers. The configs can be seen in [docker-compose.yml](./NativeSafetyGearAnalytics/docker-compose.yml) file.

Refer [NativeSafetyGearIngestion-README](./NativeSafetyGearIngestion/README.md) for more information on the udf configs.
Refer [NativeSafetyGearAnalytics-README](./NativeSafetyGearAnalytics/README.md) for more information on the udf configs.

The [PySafetyGearIngestion](./PySafetyGearIngestion) & [PySafetyGearAnalytics](./PySafetyGearAnalytics) are the same use-case but showcases the python variant of ingestion and analytics UDF containers

Refer [PySafetyGearIngestion-README](./PySafetyGearIngestion/README.md) for more information on the udf configs.
Refer [PySafetyGearAnalytics-README](./PySafetyGearAnalytics/README.md) for more information on the udf configs.

The [PyMultiClassificationIngestion](./PyMultiClassificationIngestion) showcases a UDF wherein everything is performed inside VideoIngestion containers, hence this is something user executes when it doesn't want to involve the eii-msgbus to be involved for data transfer between containers thereby achieving faster processing of the pipeline.

Refer [PyMultiClassificationIngestion-README](./PyMultiClassificationIngestion/README.md) for more information on the udf configs.

**Notes**:
* It is not mandatory to have Ingestion containers for every analytics UDF, UDFs are connected to each other via MSGBUS topics. Hence we can always use stock VideoIngestion container as long as Custom Analytic UDF container can read and churn the data it receives.

* User shouldn't remove VI & VA containers before first time build of custom UDF as it will fail to build custom UDFs. Once these UDFs are functional user can always get rid of running VI & VA containers. While removing the VI and VA containers, user need to make necessary chnages in the [***docker-compose.yml***](../build/docker-compose.yml) files based on the way it is written for e.g. user may need to remove **depends_on** keyword if custom container has it for VI and VA containers.

