
Deploy Process
==============

Please find the ordered steps for deploying the Custom UDFs.


* Please configure Visualizer and WebVisualizer services ``config.json`` to connect to one or more streams coming out of below CustomUdf services by going
  through `../Visualizer/README.md <https://github.com/open-edge-insights/video-native-visualizer/blob/master/README.md>`_ and `../WebVisualizer/README.md <https://github.com/open-edge-insights/video-web-visualizer/blob/master/README.md>`_
* 
  As per EII default scenario, the sample custom UDF containers are not mandatory containers to run, hence the builder.py should run
  ``video-streaming-all-udfs.yml`` usecase. All the sample UDF containers are added in this example. Below code snnipet signifies the same. Just enable
  the CustomUdf services that are of your interest.

  .. code-block:: yml

     AppName:
     - Visualizer
     - WebVisualizer
     - CustomUdfs/NativeSafetyGearAnalytics   <<<<< All lines from here added are customUDFs, User can define his own container directory here
     - CustomUdfs/NativeSafetyGearIngestion
     - CustomUdfs/PyMultiClassificationIngestion
     - CustomUdfs/PySafetyGearAnalytics
     - CustomUdfs/PySafetyGearIngestion

  Run the following command:

  .. code-block:: bash

     $ cd [WORKDIR]/IEdgeInsights/build/
     $ python3 builder.py -f usecases/video-streaming-all-udfs.yml

  **Note:**
  It is not mandatory to keep the custom Udfs in the CustomUdfs directory, but user must change the video-streaming-all-udfs.yml file accordingly to point the right path accordingly.
  Additionally if it is placed under **\ *IEdgeInsights*\ ** directory then the builder.py file automatically picks it to generate a consolidated Additionally if it is placed under **\ *IEdgeInsights*\ ** directory then the builder.py file automatically picks it to generate a consolidated ``IEdgeInsights/build/provision/config/eii_config.json`` and ``IEdgeInsights/build/docker-compose.yml`` files.

* 
  After generation of consolidated **\ *eii_config.json*\ ** and **\ *docker-compose.yml*\ ** file, Run the below command to provision the UDF containers. As a pre-cautionary measure, User can cross check the afore-mentioned file to verify the sanity of the UDF specific config and service details.

  .. code-block:: bash

     $ cd [WORKDIR]/IEdgeInsights/build/provision
     $ sudo -E ./provision.sh  ../docker-compose.yml

* 
  Run the use case:

  .. code-block:: bash

     $ cd [WORKDIR]/IEdgeInsights/build/
     $ # Build base images (needed for buidling native custom udf services)
     $ docker-compose -f docker-compose-build.yml build ia_eiibase ia_common ia_video_common ia_openvino_base
     $ # Build custom udf services based on the usecase chosen above
     $ docker-compose -f docker-compose-build.yml build ia_gva_safety_gear_ingestion ia_native_safety_gear_analytics ia_native_safety_gear_ingestion ia_python_multi_classification ia_python_safety_gear_analytics ia_python_safety_gear_ingestion
     $ docker-compose up -d
