
Advanced: Multiple plugin sections of EII message bus input plugin
------------------------------------------------------------------

Like any other Telegraf plugin user can keep multiple configuration sections of the EII message bus input plugin in the **\ `config/Telegraf/Telegraf.conf <https://github.com/open-edge-insights/ts-telegraf/blob/master/config/Telegraf/Telegraf.conf>`_\ ** file.

Let's have an example for the same. Let's assume there are two EII apps, one with the AppName "EII_APP1" and another with the AppName "EII_APP2", which are publishing the data to eii message bus.
*The Telegraf's ETCD configuration for the same is*

.. code-block:: json

   {
      "config":{
         "subscriber1":{
            "topics_info":[
               "topic-pfx1:temperature:10:2",
               "topic-pfx2:pressure::",
               "topic-pfx3:humidity"
            ],
            "queue_len":100,
            "num_worker":5,
            "profiling":"true"
         },
         "subscriber2":{
            "topics_info":[
               "topic-pfx21:temperature2:10:2",
               "topic-pfx22:pressure2::",
               "topic-pfx23:humidity2"
            ],
            "queue_len":100,
            "num_worker":10,
            "profiling":"true"
         }
      },
      "interfaces":{
         "Subscribers":[
            {
               "Name":"subscriber1",
               "EndPoint":"EII_APP1_container_name:5569",
               "Topics":[
                  "*"
               ],
               "Type":"zmq_tcp",
               "PublisherAppName": "EII_APP1"
            },
            {
               "Name":"subscriber2",
               "EndPoint":"EII_APP2_container_name:5570",
               "Topics":[
                  "topic-pfx21",
                  "topic-pfx22",
                  "topic-pfx23"
               ],
               "Type":"zmq_tcp",
               "PublisherAppName": "EII_APP2"
            }
         ]
      }
   }

*The Telegraf.conf configuration sections for the same is*

.. code-block::

   [[inputs.eii_msgbus]]
   instance_name = "subscriber1"
   data_format = "json"
   json_strict = true

   [[inputs.eii_msgbus]]
   instance_name = "subscriber2"
   data_format = "json"
   json_strict = true


Using input plugin
^^^^^^^^^^^^^^^^^^


* 
  By default EII message bus input plugin is disabled. To Configure the EII input plugin, uncomment the following lines in **\ `config/Telegraf/Telegraf_devmode.conf <https://github.com/open-edge-insights/ts-telegraf/blob/master/config/Telegraf/Telegraf_devmode.conf>`_\ ** and  **\ `config/Telegraf/Telegraf_devmode.conf <https://github.com/open-edge-insights/ts-telegraf/blob/master/config/Telegraf/Telegraf_devmode.conf>`_\ **

  .. code-block::

     [[inputs.eii_msgbus]]
     instance_name = "default"
     data_format = "json"
     json_strict = true
     tag_keys = [
       "my_tag_1",
       "my_tag_2"
     ]
     json_string_fields = [
       "field1",
       "field2"
     ]
     json_name_key = ""

* Edit `config.json <https://github.com/open-edge-insights/ts-telegraf/blob/master/config.json>`_ to add EII message bus input plugin.
  .. code-block::

     {
       "config": {
           ...
           "default": {
               "topics_info": [
                   "topic-pfx1:temperature:10:2",
                   "topic-pfx2:pressure::",
                   "topic-pfx3:humidity"
               ],
               "queue_len": 10,
               "num_worker": 2,
               "profiling": "false"
           },
           ...
       },
       "interfaces": {
           "Subscribers": [
               {
                   "Name": "default",
                   "Type": "zmq_tcp",
                   "EndPoint": "ia_zmq_broker:60515",
                   "Topics": [
                       "*"
                   ],
                   "PublisherAppName": "ZmqBroker"
               }
           ],
           ...
       }
     }
