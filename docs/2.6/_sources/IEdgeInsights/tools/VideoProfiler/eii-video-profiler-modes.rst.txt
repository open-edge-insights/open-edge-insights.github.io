
EII Video Profiler modes
------------------------

.. code-block::

   By default the EII Video Profiler supports two modes, which are 'fps' & 'monitor' mode.



#. 
   FPS mode

    Enabled by setting the 'mode' key in `config <https://github.com/open-edge-insights/eii-tools/blob/master/VideoProfiler/config.json>`_ to 'fps', this mode calculates the frames
    per second of any EII module by subscribing to that module's respective stream.

   .. code-block:: sh

           "mode": "fps"

   ..

      **Note:**


      * For running Video Profiler in FPS mode, it is recommended to keep PROFILING_MODE set to false in `.env <https://github.com/open-edge-insights/eii-core/tree/master/build/.env>`_ for better performance.


#. 
   Monitor mode

    Enabled by setting the 'mode' key in `config <https://github.com/open-edge-insights/eii-tools/blob/master/VideoProfiler/config.json>`_ to 'monitor', this mode calculates average & per frame stats
    for every frame while identifying if the frame was blocked at any queue of any module across the video pipeline thereby
    determining the fastest/slowest components in the pipeline.
    To be performant in profiling scenarios, VideoProfiler is enabled to work when subscribing only to a single topic in monitor mode.

    User must ensure that ``ingestion_appname`` and ``analytics_appname`` fields of the ``monitor_mode_settings`` need to be set accordingly for monitor mode.

    Refer the below exmaple config where VideoProfiler is used in monitor mode to subscribe PySafetyGearAnalytics CustomUDF results.

   .. code-block:: javascript

           "config": {
           "mode": "monitor",
           "monitor_mode_settings": {
                                       "ingestion_appname": "PySafetyGearIngestion",
                                       "analytics_appname": "PySafetyGearAnalytics",
                                       "display_metadata": false,
                                       "per_frame_stats":false,
                                       "avg_stats": true
                                   },
           "total_number_of_frames" : 5,
           "export_to_csv" : false
       }

   .. code-block:: sh

           "mode": "monitor"

    The stats to be displayed by the tool in monitor_mode can be set in the monitor_mode_settings key of `config.json <https://github.com/open-edge-insights/eii-tools/blob/master/VideoProfiler/config.json>`_.


   #. 'display_metadata': Displays the raw meta-data with timestamps associated with every frame.
   #. 'per_frame_stats': Continously displays the per frame metrics of every frame.
   #. 
      'avg_stats': Continously displays the average metrics of every frame.

      ..

         **Note:**


         * Pre-requisite for running in profiling or monitor mode: VI/VA should be running with PROFILING_MODE set to **true** in `.env <https://github.com/open-edge-insights/eii-core/tree/master/build/.env>`_
         * It is mandatory to have a udf for running in monitor mode. For instance `GVASafetyGearIngestion <https://github.com/open-edge-insights/video-custom-udfs/blob/master/GVASafetyGearIngestion/README.md>`_ does not have any udf(since it uses GVA elements) so it will not be supported in monitor mode. The workaround to use GVASafetyGearIngestion in monitor mode is to add `dummy-udf <https://github.com/open-edge-insights/video-common/blob/master/udfs/README.md>`_ in `GVASafetyGearIngestion-config <https://github.com/open-edge-insights/video-custom-udfs/blob/master/GVASafetyGearIngestion/config.json>`_.

