
Metadata Structure
------------------

EII Visualizer app can decode certain types of mete-data formats for drawing the defects on the image.
Any application wanting to use EII visualizer need to comply with the meta-data format as described below:

A) For Ingestor's **Non-GVA** type, metadata structure sample is :

.. code-block:: json

   {
    "channels": 3,
    "encoding_type": "jpeg",
    "height": 1200,

    "defects": [
        {"type": 0, "tl": [1019, 644], "br": [1063, 700]},
        {"type": 0, "tl": [1297, 758], "br": [1349, 796]}
       ],

   "display_info": [{"info":"good", "priority":0}],

   "img_handle": "348151d424",
   "width": 1920,
   "encoding_level": 95
   }

where in ``defects`` and ``display_info`` is a list of dicts.

Each entry in ``defects`` list is a dictionary that should contain following keys:


* ``type`` : value given to type will be the label id
* ``tl`` : value is the top-left ``x`` and ``y`` co-ordinate of the defect in the image.
* ``br`` : value is the bottom-right ``x`` and ``y`` co-ordinate of the defect in the image.

Each entry in ``display_info`` list is a dictionary that should contain following keys:


* ``info`` : value given will be displayed on the image.
* ``priority`` : Based on the priority level (0, 1, or 2), info will be displayed in either green, orange or red.

  * 0 : Low priority, info will be displayed in green.
  * 1 : Medium priority, info will be displayed in orange.
  * 2 : High priority, info will be displayed in red.

----

B) For Ingestor's **GVA** type, metadata structure sample is :

.. code-block:: json

   {
       "channels": 3,
       "gva_meta": [

           {"x": 1047, "height": 86, "y": 387, "width": 105, "tensor": [{"label": "", "label_id": 1, "confidence":0.8094226121902466, "attribute":"detection"}]},

           {"x": 1009, "height": 341, "y": 530, "width": 176, "tensor": [{"label": "", "label_id": 2, "confidence": 0.9699158668518066, "attribute": "detection"}]}

           ],
       "encoding_type": "jpeg",
       "height": 1080,
       "img_handle": "7247149a0d",
       "width": 1920,
       "encoding_level": 95
   }

where in ``gva_meta`` is a list of dicts.

**NOTE**\ : Any data with in the list, tuple or dict of meta data should be of primitive data type (int, float, string, bool). Refer the examples given above.
